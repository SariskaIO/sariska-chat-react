[{"/Users/brajendrakumar/sariska-chat-react/src/index.js":"1","/Users/brajendrakumar/sariska-chat-react/src/reportWebVitals.js":"2","/Users/brajendrakumar/sariska-chat-react/src/components/socket/SocketProvider.js":"3","/Users/brajendrakumar/sariska-chat-react/src/App.js":"4","/Users/brajendrakumar/sariska-chat-react/src/components/socket/SocketContext.js":"5","/Users/brajendrakumar/sariska-chat-react/src/components/channel/UseEventHandler.js":"6","/Users/brajendrakumar/sariska-chat-react/src/components/messages/ChatWindow.js":"7","/Users/brajendrakumar/sariska-chat-react/src/components/channel/CreateChannel.js":"8","/Users/brajendrakumar/sariska-chat-react/src/constants/index.js":"9","/Users/brajendrakumar/sariska-chat-react/src/utils/index.js":"10","/Users/brajendrakumar/sariska-chat-react/src/components/messages/MessageList.js":"11","/Users/brajendrakumar/sariska-chat-react/src/assets/styles/colors.js":"12","/Users/brajendrakumar/sariska-chat-react/src/components/messages/messageItem.js":"13","/Users/brajendrakumar/sariska-chat-react/src/components/messages/MessageItem.js":"14"},{"size":610,"mtime":1610605726021,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1610605726022,"results":"17","hashOfConfig":"16"},{"size":1130,"mtime":1610605726020,"results":"18","hashOfConfig":"16"},{"size":1865,"mtime":1612509149032,"results":"19","hashOfConfig":"16"},{"size":109,"mtime":1610605726019,"results":"20","hashOfConfig":"16"},{"size":476,"mtime":1610605726018,"results":"21","hashOfConfig":"16"},{"size":1451,"mtime":1612509097124,"results":"22","hashOfConfig":"16"},{"size":786,"mtime":1610605726017,"results":"23","hashOfConfig":"16"},{"size":365,"mtime":1610620819824,"results":"24","hashOfConfig":"16"},{"size":1030,"mtime":1610618557070,"results":"25","hashOfConfig":"16"},{"size":6483,"mtime":1612509010117,"results":"26","hashOfConfig":"16"},{"size":126,"mtime":1612509010112,"results":"27","hashOfConfig":"16"},{"size":1065,"mtime":1612509010122,"results":"28","hashOfConfig":"16"},{"size":1065,"mtime":1612509010122,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"9588ek",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/brajendrakumar/sariska-chat-react/src/index.js",[],["64","65"],"/Users/brajendrakumar/sariska-chat-react/src/reportWebVitals.js",[],"/Users/brajendrakumar/sariska-chat-react/src/components/socket/SocketProvider.js",["66"],"import React, {useEffect, useState} from 'react'\nimport {Socket} from 'phoenix';\nimport SocketContext from './SocketContext';\nimport {getToken} from \"../../utils\";\nimport {WEB_SOCKET_URL} from \"../../constants\";\n\nconst SocketProvider = ({children}) => {\n    const [socket, setSocket] = useState(null);\n    useEffect(() => {\n        const fetchData = async ()=> {\n            console.log('socket', socket);\n            const token = await getToken();\n            console.log('token',token);\n            const params = {token};\n            const s = new Socket(WEB_SOCKET_URL, {params});\n            s.onOpen( () => console.log(\"connection open!\") )\n            s.onError( () => console.log(\"there was an error with the connection!\") )\n            s.onClose( () => console.log(\"the connection dropped\") )\n            s.connect();\n            setSocket(s);\n        }\n        fetchData();\n        return () => {\n            socket && socket.disconnect();\n        }\n    }, []);\n\n    return (\n        <SocketContext.Provider value={socket}>\n            {children}\n        </SocketContext.Provider>\n    )\n}\n\nexport default SocketProvider","/Users/brajendrakumar/sariska-chat-react/src/App.js",["67","68","69"],"/Users/brajendrakumar/sariska-chat-react/src/components/socket/SocketContext.js",[],"/Users/brajendrakumar/sariska-chat-react/src/components/channel/UseEventHandler.js",[],"/Users/brajendrakumar/sariska-chat-react/src/components/messages/ChatWindow.js",["70","71","72","73"],"import React from 'react'\nimport MessageItem from \"./MessageItem\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { COMPANY_LOGO } from '../../constants';\nimport MessageList from './MessageList';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n      textAlign: 'left'\n    },\n  }));\n\nconst ChatWindow = ({messages, user, pushMessage, room}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n               <Toolbar>\n                 <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                   <img src={COMPANY_LOGO} />\n                 </IconButton>\n                 <Typography variant=\"h6\" className={classes.title}>\n                   Sariska\n                 </Typography>\n               </Toolbar>\n             </AppBar>\n            <MessageList messages={messages} user={user} pushMessage={pushMessage} room={room}/>\n        </div>\n    )\n}\n\n\nexport default ChatWindow;\n","/Users/brajendrakumar/sariska-chat-react/src/components/channel/CreateChannel.js",["74","75"],"import { useContext, useEffect, useRef, useState } from 'react'\nimport SocketContext from '../socket/SocketContext'\n\nconst CreateChannel = (topic, params={}, onJoin) => {\n    const socket = useContext(SocketContext);\n    const [channel, setChannel] = useState(null);\n    \n    useEffect(()=>{\n        if(socket===null){\n            return;\n        }\n        const ch = socket.channel(topic, params);\n        ch.join()\n            .receive('ignore', () => console.log('Access denied.'))\n            .receive('ok', () => console.log('Access granted.'))\n            .receive('timeout', () => console.log('Timeout.'));\n        setChannel(ch);\n        return () => {\n            ch && ch.leave();\n        }\n    }, [socket])\n    return (\n        channel\n    )\n}\n\nexport default CreateChannel;\n","/Users/brajendrakumar/sariska-chat-react/src/constants/index.js",[],"/Users/brajendrakumar/sariska-chat-react/src/utils/index.js",[],"/Users/brajendrakumar/sariska-chat-react/src/components/messages/MessageList.js",["76","77","78"],"import React, { useEffect, useRef, useState } from 'react'\nimport MessageItem from \"./MessageItem\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport { Avatar, Box, Grid, TextField, Tooltip, Zoom } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Typography from '@material-ui/core/Typography';\nimport { colors } from '../../assets/styles/colors';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport { AvatarGroup } from '@material-ui/lab';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flex: 1,\n      display: 'flex',\n      flexDirection: 'column',\n      height: '90vh',\n      backgroundColor: `${colors.gray}`\n    },\n    card: {\n      flex: 1,\n      width: '80%',\n      margin: 'auto',\n      display: 'flex',\n      flexDirection: 'column',\n      height: '60vh'\n    },\n    cardHeader: {\n        backgroundColor: `${colors.skyblue}`\n    },\n    avatarList: {\n        display: 'flex',\n        flexDirection: 'row'\n    },\n    cardContent: {\n        flex: 1,\n        height: '200px',\n        overflow: 'auto'\n    },\n    cardAction: {\n        boxShadow: '0px 4px 4px 2px rgba(0,0,0,0.8)',\n        zIndex: '9'\n    },\n    cardForm: {\n        display: 'flex',\n        alignItems: 'flex-end',\n        width: '100%',\n    },\n    cardTextField: {\n        width: '100%',\n        padding: '2px'\n    },\n    enterText: {\n        backgroundColor: `${colors.skyblue}`,\n        \"&:hover\": {\n            opacity: '0.8',\n            cursor: 'pointer'\n        }\n    },\n    box: {\n        textAlign: 'left'\n    },\n    chatLine: {\n        display: 'flex'\n    },\n    text: {\n        background: `${colors.gray}`,\n        width: 'fit-content',\n        padding: '5px',\n        borderRadius: '0px 5px 10px',\n        marginBottom: '10px',\n        maxWidth: '70%',\n        marginLeft: '10px'\n    },\n    userAvatar: {\n        height: '29px', \n        width: '29px',\n        backgroundColor: `${colors.blue}`\n    },\n\n    userAvatar1: {\n        height: '26px', \n        width: '26px',\n        backgroundColor: `${colors.white}`,\n        color: `${colors.blue}`,\n    },\n    customWidth: {\n        maxWidth: 100,\n        color: '#fff',\n        backgroundColor: '#000',\n        fontWeight: 700,\n        fontSize: '110%'\n    }\n  }));\n  \nconst MessageList = ({messages, pushMessage, user}) => {\n    const classes = useStyles();\n    const [text, setText] = useState('');\n    const [chat, setChat] = useState('');\n    const [room, setRoom] = useState(null);\n    //const [user, setUser] = useState(null);\n\n\n    const isMessageEmpty = (text) => {\n        return adjustTextMessage(text).length === 0;\n    }\n    \n    const adjustTextMessage = (text) => {\n        return text.trim();\n    };\n    const disableButton = isMessageEmpty(text);\n\n    const handleChange = (e) => {\n        setText(e.target.value)\n    }\n    const handleSubmit=(e)=>{\n        e.preventDefault();\n        !disableButton && \n        pushMessage(text);\n        setChat(chat => [...chat,text]);\n        !disableButton && setText('');\n    }\n\n\n    useEffect(()=> {\n       const userDetails = JSON.parse(localStorage.getItem(\"user\"));\n       const roomDetails = JSON.parse(localStorage.getItem(\"room\"));\n        //setUser(userDetails);\n        setRoom(roomDetails);\n    },[])\n\n    const scrollRef = useRef(null);\n    const scrollToBottom = () => {\n        scrollRef.current.scrollIntoView({ behavior: 'smooth' })\n      }\n    useEffect(()=>{\n        scrollToBottom();\n    },[text])\n\n    console.log('userDetails are', user);\n    \n    console.log('text is', text);\n\n    console.log('room is', room);\n\n    return (\n        <div className={classes.root}>\n            <Card className={classes.card}>\n      <CardHeader\n        avatar={\n            <div className={classes.avatarList}>\n            <Tooltip TransitionComponent={Zoom} title=\"guru\"/*{user.name}*/ arrow classes={{ tooltip: classes.customWidth }}>\n                <AvatarGroup max={2}>\n                  <Avatar className={classes.userAvatar1}>G{/*user.name.toUpperCase().slice(0,1)*/}</Avatar>\n                </AvatarGroup>\n                </Tooltip>\n        </div>\n        }\n        action={\n          <IconButton aria-label=\"settings\">\n            <MoreVertIcon />\n          </IconButton>\n        }\n        //title={`Room Name: ${room.session_id}, Creator : ${room.created_by}, Created-on: ${room.inserted_at.slice(0,10)}`}\n        title =\"guru\"\n        className={classes.cardHeader}\n      />\n      <CardContent className={classes.cardContent}>\n      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Hey ! Gurudeep{/*user.name*/}\n        </Typography>\n        <Box className={classes.box}>\n            {messages.map((message, id)=> {\n                return (\n                    <MessageItem message={message} id={id} user={user} />\n                )\n            })}\n        </Box>\n\n        <Typography ref={scrollRef} style={{height: '18px'}}></Typography>\n      </CardContent>\n      <CardActions disableSpacing className={classes.cardAction}>\n        <form noValidate autoComplete=\"off\" className={classes.cardForm} onSubmit={handleSubmit}>\n        <Grid container spacing={1} alignItems=\"flex-end\" style={{width: '100%', alignItems: 'center'}}>\n          <Grid item>\n              <Avatar style={{backgroundColor: `${colors.skyblue}`}}>\n                <CreateIcon />\n            </Avatar>\n          </Grid>\n          <Grid item style={{flex: 1}}>\n          <TextField \n            id=\"text\" \n            label=\"Enter Text Here\" \n            variant=\"outlined\" \n            className={classes.cardTextField}\n            onChange={handleChange}\n            value={text}\n         />  \n          </Grid>\n          <Grid item>\n          <Avatar className={classes.enterText} onClick={handleSubmit} disabled={disableButton}>\n                <DoneAllIcon />\n            </Avatar> \n          </Grid>\n          \n        </Grid>\n        </form>\n      </CardActions>\n      </Card>\n            {/* {messages.map((message, id) => <MessageItem message={message} key={id}/>)} */}\n        </div>\n    )\n}\n\n\nexport default MessageList;\n\n","/Users/brajendrakumar/sariska-chat-react/src/assets/styles/colors.js",[],"/Users/brajendrakumar/sariska-chat-react/src/components/messages/messageItem.js",[],["79","80"],"/Users/brajendrakumar/sariska-chat-react/src/components/messages/MessageItem.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":26,"column":8,"nodeType":"87","endLine":26,"endColumn":10,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":26},{"ruleId":"89","severity":1,"message":"93","line":11,"column":10,"nodeType":"91","messageId":"92","endLine":11,"endColumn":14},{"ruleId":"89","severity":1,"message":"94","line":11,"column":16,"nodeType":"91","messageId":"92","endLine":11,"endColumn":23},{"ruleId":"89","severity":1,"message":"95","line":2,"column":8,"nodeType":"91","messageId":"92","endLine":2,"endColumn":19},{"ruleId":"89","severity":1,"message":"96","line":7,"column":8,"nodeType":"91","messageId":"92","endLine":7,"endColumn":14},{"ruleId":"89","severity":1,"message":"97","line":9,"column":8,"nodeType":"91","messageId":"92","endLine":9,"endColumn":16},{"ruleId":"98","severity":1,"message":"99","line":36,"column":20,"nodeType":"100","endLine":36,"endColumn":46},{"ruleId":"89","severity":1,"message":"101","line":1,"column":33,"nodeType":"91","messageId":"92","endLine":1,"endColumn":39},{"ruleId":"85","severity":1,"message":"102","line":21,"column":8,"nodeType":"87","endLine":21,"endColumn":16,"suggestions":"103"},{"ruleId":"89","severity":1,"message":"104","line":6,"column":8,"nodeType":"91","messageId":"92","endLine":6,"endColumn":17},{"ruleId":"89","severity":1,"message":"93","line":106,"column":12,"nodeType":"91","messageId":"92","endLine":106,"endColumn":16},{"ruleId":"89","severity":1,"message":"105","line":133,"column":14,"nodeType":"91","messageId":"92","endLine":133,"endColumn":25},{"ruleId":"81","replacedBy":"106"},{"ruleId":"83","replacedBy":"107"},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["110"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'chat' is assigned a value but never used.","'setchat' is assigned a value but never used.","'MessageItem' is defined but never used.","'Button' is defined but never used.","'MenuIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'params' and 'topic'. Either include them or remove the dependency array.",["111"],"'CardMedia' is defined but never used.","'userDetails' is assigned a value but never used.",["108"],["109"],"no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},"Update the dependencies array to be: [socket]",{"range":"116","text":"117"},"Update the dependencies array to be: [params, socket, topic]",{"range":"118","text":"119"},[968,970],"[socket]",[708,716],"[params, socket, topic]"]