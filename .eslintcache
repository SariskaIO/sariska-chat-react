[{"/Users/brajendra/sariska-chat-react/src/index.js":"1","/Users/brajendra/sariska-chat-react/src/reportWebVitals.js":"2","/Users/brajendra/sariska-chat-react/src/App.js":"3","/Users/brajendra/sariska-chat-react/src/components/socket/SocketProvider.js":"4","/Users/brajendra/sariska-chat-react/src/components/channel/CreateChannel.js":"5","/Users/brajendra/sariska-chat-react/src/components/messages/ChatWindow.js":"6","/Users/brajendra/sariska-chat-react/src/components/channel/UseEventHandler.js":"7","/Users/brajendra/sariska-chat-react/src/components/socket/SocketContext.js":"8","/Users/brajendra/sariska-chat-react/src/components/messages/MessageItem.js":"9","/Users/brajendra/sariska-chat-react/src/components/messages/MessageList.js":"10","/Users/brajendra/sariska-chat-react/src/utils/index.js":"11","/Users/brajendra/sariska-chat-react/src/constants/index.js":"12","/Users/brajendra/sariska-chat-react/src/assets/styles/colors.js":"13"},{"size":610,"mtime":1682942259703,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1682942259703,"results":"16","hashOfConfig":"15"},{"size":1980,"mtime":1684751555482,"results":"17","hashOfConfig":"15"},{"size":1130,"mtime":1683536387215,"results":"18","hashOfConfig":"15"},{"size":786,"mtime":1682942259702,"results":"19","hashOfConfig":"15"},{"size":1026,"mtime":1682942259702,"results":"20","hashOfConfig":"15"},{"size":476,"mtime":1682942259702,"results":"21","hashOfConfig":"15"},{"size":109,"mtime":1682942259702,"results":"22","hashOfConfig":"15"},{"size":1070,"mtime":1684244696949,"results":"23","hashOfConfig":"15"},{"size":6248,"mtime":1682942259702,"results":"24","hashOfConfig":"15"},{"size":727,"mtime":1684338259017,"results":"25","hashOfConfig":"15"},{"size":365,"mtime":1684338364640,"results":"26","hashOfConfig":"15"},{"size":126,"mtime":1682942259702,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"vguc7v",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/brajendra/sariska-chat-react/src/index.js",[],["59","60"],"/Users/brajendra/sariska-chat-react/src/reportWebVitals.js",[],"/Users/brajendra/sariska-chat-react/src/App.js",["61","62","63"],"/Users/brajendra/sariska-chat-react/src/components/socket/SocketProvider.js",["64"],"import React, {useEffect, useState} from 'react'\nimport {Socket} from 'phoenix';\nimport SocketContext from './SocketContext';\nimport {getToken} from \"../../utils\";\nimport {WEB_SOCKET_URL} from \"../../constants\";\n\nconst SocketProvider = ({children}) => {\n    const [socket, setSocket] = useState(null);\n    useEffect(() => {\n        const fetchData = async ()=> {\n            console.log('socket', socket);\n            const token = await getToken();\n            console.log('token',token);\n            const params = {token};\n            const s = new Socket(WEB_SOCKET_URL, {params});\n            s.onOpen( () => console.log(\"connection open!\") )\n            s.onError( () => console.log(\"there was an error with the connection!\") )\n            s.onClose( () => console.log(\"the connection dropped\") )\n            s.connect();\n            setSocket(s);\n        }\n        fetchData();\n        return () => {\n            socket && socket.disconnect();\n        }\n    }, []);\n\n    return (\n        <SocketContext.Provider value={socket}>\n            {children}\n        </SocketContext.Provider>\n    )\n}\n\nexport default SocketProvider","/Users/brajendra/sariska-chat-react/src/components/channel/CreateChannel.js",["65","66"],"import { useContext, useEffect, useRef, useState } from 'react'\nimport SocketContext from '../socket/SocketContext'\n\nconst CreateChannel = (topic, params={}, onJoin) => {\n    const socket = useContext(SocketContext);\n    const [channel, setChannel] = useState(null);\n    \n    useEffect(()=>{\n        if(socket===null){\n            return;\n        }\n        const ch = socket.channel(topic, params);\n        ch.join()\n            .receive('ignore', () => console.log('Access denied.'))\n            .receive('ok', () => console.log('Access granted.'))\n            .receive('timeout', () => console.log('Timeout.'));\n        setChannel(ch);\n        return () => {\n            ch && ch.leave();\n        }\n    }, [socket])\n    return (\n        channel\n    )\n}\n\nexport default CreateChannel;\n","/Users/brajendra/sariska-chat-react/src/components/messages/ChatWindow.js",["67","68","69","70","71","72","73","74"],"import React from 'react'\nimport MessageItem from \"./MessageItem\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { COMPANY_LOGO } from '../../constants';\nimport MessageList from './MessageList';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n      textAlign: 'left'\n    },\n  }));\n\nconst ChatWindow = ({messages, user, pushMessage, room}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <MessageList messages={messages} user={user} pushMessage={pushMessage} room={room}/>\n        </div>\n    )\n}\n\n\nexport default ChatWindow;\n","/Users/brajendra/sariska-chat-react/src/components/channel/UseEventHandler.js",[],"/Users/brajendra/sariska-chat-react/src/components/socket/SocketContext.js",[],"/Users/brajendra/sariska-chat-react/src/components/messages/MessageItem.js",[],"/Users/brajendra/sariska-chat-react/src/components/messages/MessageList.js",["75","76","77"],"import React, { useEffect, useRef, useState } from 'react'\nimport MessageItem from \"./MessageItem\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport { Avatar, Box, Grid, TextField, Tooltip, Zoom } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Typography from '@material-ui/core/Typography';\nimport { colors } from '../../assets/styles/colors';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport { AvatarGroup } from '@material-ui/lab';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flex: 1,\n      display: 'flex',\n      flexDirection: 'column',\n      height: '90vh',\n      backgroundColor: `${colors.gray}`\n    },\n    card: {\n      flex: 1,\n      width: '100%',\n      margin: 'auto',\n      display: 'flex',\n      flexDirection: 'column',\n      height: '60vh'\n    },\n    cardHeader: {\n        backgroundColor: `${colors.skyblue}`\n    },\n    avatarList: {\n        display: 'flex',\n        flexDirection: 'row'\n    },\n    cardContent: {\n        flex: 1,\n        height: '200px',\n        overflow: 'auto'\n    },\n    cardAction: {\n        boxShadow: '0px 4px 4px 2px rgba(0,0,0,0.8)',\n        zIndex: '9'\n    },\n    cardForm: {\n        display: 'flex',\n        alignItems: 'flex-end',\n        width: '100%',\n    },\n    cardTextField: {\n        width: '100%',\n        padding: '2px'\n    },\n    enterText: {\n        backgroundColor: `${colors.skyblue}`,\n        \"&:hover\": {\n            opacity: '0.8',\n            cursor: 'pointer'\n        }\n    },\n    box: {\n        textAlign: 'left'\n    },\n    chatLine: {\n        display: 'flex'\n    },\n    text: {\n        background: `${colors.gray}`,\n        width: 'fit-content',\n        padding: '5px',\n        borderRadius: '0px 5px 10px',\n        marginBottom: '10px',\n        maxWidth: '70%',\n        marginLeft: '10px'\n    },\n    userAvatar: {\n        height: '29px', \n        width: '29px',\n        backgroundColor: `${colors.blue}`\n    },\n\n    userAvatar1: {\n        height: '26px', \n        width: '26px',\n        backgroundColor: `${colors.white}`,\n        color: `${colors.blue}`,\n    },\n    customWidth: {\n        maxWidth: 100,\n        color: '#fff',\n        backgroundColor: '#000',\n        fontWeight: 700,\n        fontSize: '110%'\n    }\n  }));\n  \nconst MessageList = ({messages, pushMessage, user}) => {\n    const classes = useStyles();\n    const [text, setText] = useState('');\n    const [chat, setChat] = useState('');\n    const [room, setRoom] = useState(null);\n    //const [user, setUser] = useState(null);\n\n\n    const isMessageEmpty = (text) => {\n        return adjustTextMessage(text).length === 0;\n    }\n    \n    const adjustTextMessage = (text) => {\n        return text.trim();\n    };\n    const disableButton = isMessageEmpty(text);\n\n    const handleChange = (e) => {\n        setText(e.target.value)\n    }\n    const handleSubmit=(e)=>{\n        e.preventDefault();\n        !disableButton && \n        pushMessage(text);\n        setChat(chat => [...chat,text]);\n        !disableButton && setText('');\n    }\n\n\n    useEffect(()=> {\n       const userDetails = JSON.parse(localStorage.getItem(\"user\"));\n       const roomDetails = JSON.parse(localStorage.getItem(\"room\"));\n        //setUser(userDetails);\n        setRoom(roomDetails);\n    },[])\n\n    const scrollRef = useRef(null);\n    const scrollToBottom = () => {\n        scrollRef.current.scrollIntoView({ behavior: 'smooth' })\n      }\n    useEffect(()=>{\n        scrollToBottom();\n    },[text])\n\n    console.log('userDetails are', user);\n    \n    console.log('text is', text);\n\n    console.log('room is', room);\n\n    return (\n        <div className={classes.root}>\n            <Card className={classes.card}>\n      <CardHeader\n        avatar={\n            <div className={classes.avatarList}>\n            <Tooltip TransitionComponent={Zoom} title={user.name} arrow classes={{ tooltip: classes.customWidth }}>\n                <AvatarGroup max={2}>\n                </AvatarGroup>\n                </Tooltip>\n        </div>\n        }\n        action={\n          <IconButton aria-label=\"settings\">\n            <MoreVertIcon />\n          </IconButton>\n        }\n        title={`Room Name: ${room?.session_id}, Name: ${user?.name}`}\n        className={classes.cardHeader}\n      />\n      <CardContent className={classes.cardContent}>\n      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        </Typography>\n        <Box className={classes.box}>\n            {messages.map((message, id)=> {\n                return (\n                    <MessageItem message={message} id={id} user={user} />\n                )\n            })}\n        </Box>\n\n        <Typography ref={scrollRef} style={{height: '18px'}}></Typography>\n      </CardContent>\n      <CardActions disableSpacing className={classes.cardAction}>\n        <form noValidate autoComplete=\"off\" className={classes.cardForm} onSubmit={handleSubmit}>\n        <Grid container spacing={1} alignItems=\"flex-end\" style={{width: '100%', alignItems: 'center'}}>\n          <Grid item>\n              <Avatar style={{backgroundColor: `${colors.skyblue}`}}>\n                <CreateIcon />\n            </Avatar>\n          </Grid>\n          <Grid item style={{flex: 1}}>\n          <TextField \n            id=\"text\" \n            label=\"Enter Text Here\" \n            variant=\"outlined\" \n            className={classes.cardTextField}\n            onChange={handleChange}\n            value={text}\n         />  \n          </Grid>\n          <Grid item>\n          <Avatar className={classes.enterText} onClick={handleSubmit} disabled={disableButton}>\n                <DoneAllIcon />\n            </Avatar> \n          </Grid>\n          \n        </Grid>\n        </form>\n      </CardActions>\n      </Card>\n            {/* {messages.map((message, id) => <MessageItem message={message} key={id}/>)} */}\n        </div>\n    )\n}\n\n\nexport default MessageList;\n\n","/Users/brajendra/sariska-chat-react/src/utils/index.js",[],"/Users/brajendra/sariska-chat-react/src/constants/index.js",[],"/Users/brajendra/sariska-chat-react/src/assets/styles/colors.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":26},{"ruleId":"82","severity":1,"message":"86","line":11,"column":10,"nodeType":"84","messageId":"85","endLine":11,"endColumn":14},{"ruleId":"82","severity":1,"message":"87","line":11,"column":16,"nodeType":"84","messageId":"85","endLine":11,"endColumn":23},{"ruleId":"88","severity":1,"message":"89","line":26,"column":8,"nodeType":"90","endLine":26,"endColumn":10,"suggestions":"91"},{"ruleId":"82","severity":1,"message":"92","line":1,"column":33,"nodeType":"84","messageId":"85","endLine":1,"endColumn":39},{"ruleId":"88","severity":1,"message":"93","line":21,"column":8,"nodeType":"90","endLine":21,"endColumn":16,"suggestions":"94"},{"ruleId":"82","severity":1,"message":"95","line":2,"column":8,"nodeType":"84","messageId":"85","endLine":2,"endColumn":19},{"ruleId":"82","severity":1,"message":"96","line":4,"column":8,"nodeType":"84","messageId":"85","endLine":4,"endColumn":14},{"ruleId":"82","severity":1,"message":"97","line":5,"column":8,"nodeType":"84","messageId":"85","endLine":5,"endColumn":15},{"ruleId":"82","severity":1,"message":"98","line":6,"column":8,"nodeType":"84","messageId":"85","endLine":6,"endColumn":18},{"ruleId":"82","severity":1,"message":"99","line":7,"column":8,"nodeType":"84","messageId":"85","endLine":7,"endColumn":14},{"ruleId":"82","severity":1,"message":"100","line":8,"column":8,"nodeType":"84","messageId":"85","endLine":8,"endColumn":18},{"ruleId":"82","severity":1,"message":"101","line":9,"column":8,"nodeType":"84","messageId":"85","endLine":9,"endColumn":16},{"ruleId":"82","severity":1,"message":"102","line":10,"column":10,"nodeType":"84","messageId":"85","endLine":10,"endColumn":22},{"ruleId":"82","severity":1,"message":"103","line":6,"column":8,"nodeType":"84","messageId":"85","endLine":6,"endColumn":17},{"ruleId":"82","severity":1,"message":"86","line":106,"column":12,"nodeType":"84","messageId":"85","endLine":106,"endColumn":16},{"ruleId":"82","severity":1,"message":"104","line":133,"column":14,"nodeType":"84","messageId":"85","endLine":133,"endColumn":25},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'chat' is assigned a value but never used.","'setchat' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["107"],"'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'params' and 'topic'. Either include them or remove the dependency array.",["108"],"'MessageItem' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'COMPANY_LOGO' is defined but never used.","'CardMedia' is defined but never used.","'userDetails' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},"Update the dependencies array to be: [socket]",{"range":"113","text":"114"},"Update the dependencies array to be: [params, socket, topic]",{"range":"115","text":"116"},[968,970],"[socket]",[708,716],"[params, socket, topic]"]